# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  communities: [Community!]!
  id: ID!
  name: String!
}

input CategoryInput {
  name: String!
}

type Comment {
  createdAt: DateTime!
  id: ID!
  replies: [Comment!]!
  text: String!
  user: User!
}

input CommentInput {
  text: String!
}

type Community {
  admin: User!
  avatarImage: String
  description: String!
  id: ID!
  moderators: [User!]!
  name: String!
  posts: [Post!]!
}

input CommunityInput {
  description: String!
  name: String!
}

type Country {
  country: String!
  id: ID!
  iso2: String!
  iso3: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  addedSubscription(pushSubscriptionInput: PushSubscriptionInput!, userId: String!): Boolean!
  changeAvatar(communityId: String!, file: Upload!): Community!
  createCategory(categoryInput: CategoryInput!): Category!
  createComment(commentInput: CommentInput!, postId: String!, userId: String!): Comment!
  createCommunity(adminId: String!, categoryName: String!, communityInput: CommunityInput!): Community!
  createPost(communityId: String!, postInput: PostInput!, userId: String!): Post!
  deleteById(communityId: String!): Community!
  deleteUser(userId: String!): User!
  joinCommunity(communityId: String!, userId: String!): Community!
  register(userData: UserInput!): User!
  reply(commentId: String!, replyInput: CommentInput!, userId: String!): Comment!
  updateOptions(userId: String!, userOptionsInput: UserOptionInput!): User!
}

type Post {
  comments: [Comment!]!
  createdAt: DateTime!
  id: ID!
  str: String
  title: String!
  user: User!
}

input PostInput {
  str: String!
  title: String!
}

type PostSubscription {
  str: String!
  title: String!
}

type PushSubscription {
  id: ID!
  subscription: PushSubscriptionCore
  user: User!
}

type PushSubscriptionCore {
  endpoint: String!
  keys: PushSubscriptionKeys!
}

input PushSubscriptionCoreInput {
  endpoint: String!
  keys: PushSubscriptionKeysInput!
}

input PushSubscriptionInput {
  subscription: PushSubscriptionCoreInput!
}

type PushSubscriptionKeys {
  auth: String!
  p256dh: String!
}

input PushSubscriptionKeysInput {
  auth: String!
  p256dh: String!
}

type Query {
  categories(categoryName: String): [Category!]!
  categoryById(categoryId: String!): Category!
  categoryByName(categoryName: String!): Category!
  comments: [Comment!]!
  communities: [Community!]!
  community(communityId: String!): Community!
  countries: [Country!]!
  loginUser(userCredentialsInput: UserCredentialsInput!): User!
  posts: [Post!]!
  subscriptions: [PushSubscription!]!
  user(userId: String!): User
  users: [User!]!
}

type Subscription {
  postAdded: PostSubscription!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  birthDate: DateTime
  comments: [Comment!]!
  communities: [Community!]!
  createdAt: DateTime!
  email: String!
  firstName: String
  gender: String
  id: ID!
  lastName: String
  location: String
  options: UserOptions
  posts: [Post!]!
  username: String!
}

input UserCredentialsInput {
  password: String!
  username: String!
}

input UserInput {
  birthDate: DateTime
  email: String!
  firstName: String
  gender: String
  lastName: String
  location: String
  password: String!
  username: String!
}

input UserOptionInput {
  inboxMessages: Boolean!
  newFollowers: Boolean!
  newPosts: Boolean!
  upvotesOnComments: Boolean!
  upvotesOnPosts: Boolean!
}

type UserOptions {
  inboxMessages: Boolean
  newFollowers: Boolean
  newPosts: Boolean
  upvotesOnComments: Boolean
  upvotesOnPosts: Boolean
}
