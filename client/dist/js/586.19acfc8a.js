"use strict";(self["webpackChunkclient"]=self["webpackChunkclient"]||[]).push([[586],{7586:function(t,e,n){n.r(e),n.d(e,{default:function(){return N}});var i=n(6252);const o={class:"flex justify-center gap-2"},a={class:"flex flex-col gap-4"};function s(t,e,n,s,m,r){const c=(0,i.up)("communities-list",!0);return(0,i.wg)(),(0,i.iD)("div",null,[(0,i._)("div",o,[(0,i.Wm)(c,{category:"random"}),(0,i.Wm)(c,{class:"w-1/3",category:"all"}),(0,i._)("div",a,[(0,i.Wm)(c,{category:"random"}),(0,i.Wm)(c,{category:"gaming"})])])])}var m=n(3577);const r={class:"p-2 bg-neutral-300 w-full text-center text-xs md:text-base"},c={class:"bg-neutral-50 dark:bg-neutral-600 list-inside rounded shadow-md dark:text-white"};function u(t,e,n,o,a,s){const u=(0,i.up)("community-single-item");return(0,i.wg)(),(0,i.iD)("div",null,[(0,i._)("div",r,(0,m.zw)(s.title),1),(0,i._)("ol",c,[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(a.communities,(t=>((0,i.wg)(),(0,i.j4)(u,{key:t.id,community:t},null,8,["community"])))),128))])])}const l=["data-community-id"],d=["src"];function y(t,e,n,o,a,s){const r=(0,i.up)("router-link"),c=(0,i.up)("join-community-button");return(0,i.wg)(),(0,i.iD)("li",{"data-community-id":n.community.id,class:"md:flex justify-between p-3 text-center"},[(0,i.Wm)(r,{class:"md:flex gap-2 md:text-base text-sm font-light hover:font-extralight hover:text-blue-400",to:{name:"communityDetailsView",params:{id:n.community.id}}},{default:(0,i.w5)((()=>[(0,i._)("img",{class:"w-7 h-7 mx-auto",src:s.avatarImage,alt:"communityImage"},null,8,d),(0,i.Uk)(" "+(0,m.zw)(n.community.name),1)])),_:1},8,["to"]),(0,i.Wm)(c,{community:n.community,class:"hover:bg-blue-600 rounded-full w-full md:w-auto text-white font-semibold text-sm bg-blue-500 px-3 py-1 transition-all shadow-md"},null,8,["community"])],8,l)}var p=n(9963);function g(t,e,n,o,a,s){return o.isAuthenticated?((0,i.wg)(),(0,i.iD)("button",{key:0,type:"submit",onClick:e[0]||(e[0]=(0,p.iM)((t=>s.joinCommunity(t)),["prevent"])),class:""},"Join")):(0,i.kq)("",!0)}var h={props:{community:Object},setup(){const t=(0,i.f3)("authenticated");return{isAuthenticated:t}},methods:{async joinCommunity(t){await fetch("http://localhost:3000/graphql",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:"\n          mutation JOIN_COMMUNITY($communityId: String!, $userId: String!) {\n            joinCommunity(communityId: $communityId, userId: $userId) {\n              id\n              name\n            }\n          }\n          ",variables:{communityId:this.community.id,userId:JSON.parse(sessionStorage.getItem("user")).id}})}).then((t=>t.json())).then((t=>t.data.joinCommunity)),t.target.classList.add("bg-green-500"),t.target.classList.remove("hover:bg-blue-600")}}},f=n(3744);const b=(0,f.Z)(h,[["render",g]]);var v=b,w=n(8225),I={props:{community:Object},components:{JoinCommunityButton:v},computed:{avatarImage(){return(0,w.Rd)(this.community.avatarImage)}}};const x=(0,f.Z)(I,[["render",y]]);var T=x,j={components:{CommunitySingleItem:T},props:{category:{type:String,default:"all"}},data(){return{communities:[],categoryThis:""}},async created(){if("all"==this.category)return void(this.communities=await fetch("http://localhost:3000/graphql",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:"\n          query LIST_COMMUNITIES {\n              communities {\n                  id\n                  name\n                  description\n                  avatarImage\n              }\n          }"})}).then((t=>t.json())).then((t=>t.data.communities)));let t=await fetch("http://localhost:3000/graphql",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:"\n        query LIST_CATEGORIES_WITH_COMMUNITIES($categoryName: String) {\n            categories(categoryName: $categoryName) {\n                id\n                name\n                communities {\n                  id\n                  name\n                  description\n                  avatarImage\n                }\n            }\n        }",variables:{categoryName:"random"==this.category?null:this.category}})}).then((t=>t.json())).then((t=>t.data.categories));t=t[parseInt(Math.random()*t.length-1)],this.categoryThis=t.name,this.communities=t.communities},computed:{title(){return""==this.categoryThis?"Top communities":`Top ${this.categoryThis} communities`}}};const C=(0,f.Z)(j,[["render",u]]);var S=C,O={name:"communitiesListView",components:{CommunitiesList:S}};const k=(0,f.Z)(O,[["render",s]]);var N=k},8225:function(t,e,n){n.d(e,{PS:function(){return i},ET:function(){return o},Mu:function(){return a},Rd:function(){return s}});const i=t=>{let e=t.split("").reduce(((t,e)=>e==e.toUpperCase()?`${t} ${e}`:t+e));return e[0].toUpperCase()+e.slice(1)},o=(t,e,n)=>t.map((t=>({text:t[e],value:t[n]}))),a=t=>{let e=Math.abs(new Date(t)-new Date)/1e3,n="days";return e<60?n="seconds":e<3600?(e/=60,n="minutes"):e<216e3&&(e/=3600,n="hours"),`${e.toFixed(0)} ${n} ago`},s=t=>`http://localhost:3000/${t}`}}]);
//# sourceMappingURL=586.19acfc8a.js.map