"use strict";(self["webpackChunkclient"]=self["webpackChunkclient"]||[]).push([[139],{1139:function(n,t,s){s.r(t),s.d(t,{default:function(){return c}});var e=s(6252),o=s(3577),u=s(9963);const i=["onUpdate:modelValue"];function p(n,t,s,p,r,a){return(0,e.wg)(!0),(0,e.iD)(e.HY,null,(0,e.Ko)(p.user.options,((n,s)=>((0,e.wg)(),(0,e.iD)("div",{class:"dark:text-white p-2",key:s},[(0,e.Uk)((0,o.zw)(s)+" ",1),(0,e.wy)((0,e._)("input",{type:"checkbox",class:"form-checkbox shadow-sm","onUpdate:modelValue":n=>p.user.options[s]=n,onChange:t[0]||(t[0]=n=>a.updateOptions())},null,40,i),[[u.e8,p.user.options[s]]])])))),128)}var r={setup(){const n=(0,e.f3)("user");return{user:n}},methods:{async updateOptions(){this.user.options=await fetch("http://localhost:3000/graphql",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:"\n            mutation UPDATE_OPTIONS($userId: String!, $userOptionsInput: UserOptionInput!) {\n                updateOptions(userId: $userId, userOptionsInput: $userOptionsInput) {\n                    id\n                    username\n                    options {\n                    inboxMessages\n                    upvotesOnComments\n                    upvotesOnPosts\n                    newFollowers\n                    }\n                }\n            }",variables:{userId:this.user.id,userOptionsInput:this.user.options}})}).then((n=>n.json())).then((n=>n.data.updateOptions.options)),sessionStorage.setItem("user",JSON.stringify(this.user))}}},a=s(3744);const d=(0,a.Z)(r,[["render",p]]);var c=d}}]);
//# sourceMappingURL=139.726cb82c.js.map