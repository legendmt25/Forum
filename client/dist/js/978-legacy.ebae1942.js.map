{"version":3,"file":"js/978-legacy.ebae1942.js","mappings":"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","sources":["webpack://client/./src/views/CommunityDetails.vue","webpack://client/./src/views/CommunityDetails.vue?5cad"],"sourcesContent":["<template>\r\n  <div class=\"flex flex-row gap-4\">\r\n    <button @click=\"addImage()\">\r\n      <img :src=\"avatarImageSrc\" class=\"w-10\" alt=\"community image\" />\r\n    </button>\r\n    <div>\r\n      <h2 class=\"font-semibold text-2xl\">{{ community.name }}</h2>\r\n      <p class=\"text-sm\">{{ community.description }}</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex justify-center\">\r\n    <div class=\"flex flex-col items-center w-1/2 gap-3\">\r\n      <div class=\"flex gap-3 bg-neutral-50 shadow-sm roudned w-full p-3\">\r\n        <router-link class=\"w-full\" :to=\"{ name: 'createPostView', params: {} }\">\r\n          <input class=\"p-1 pl-10 w-full\" placeholder=\"Create Post\" type=\"text\" />\r\n        </router-link>\r\n      </div>\r\n      <post-single\r\n        v-for=\"post in community.posts\"\r\n        :key=\"post.id\"\r\n        :post=\"post\"\r\n      ></post-single>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PostSingle from '../components/PostSingle.vue';\r\nimport { communityAvatarImage } from '../components/utility';\r\nexport default {\r\n  name: 'communityDetailsView',\r\n  components: { PostSingle },\r\n  data() {\r\n    return {\r\n      community: Object,\r\n    };\r\n  },\r\n  async created() {\r\n    this.community = await fetch('http://localhost:3000/graphql', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: `\r\n            query GET_COMMUNITY($communityId: String!) {\r\n                community(communityId: $communityId) {\r\n                    id\r\n                    name\r\n                    description\r\n                    avatarImage\r\n                    posts {\r\n                        id\r\n                        title\r\n                        str\r\n                        createdAt\r\n                        user {\r\n                            id\r\n                            username\r\n                        }\r\n                        comments {\r\n                            id\r\n                            text\r\n                            createdAt\r\n                            user {\r\n                              id\r\n                              username\r\n                            }\r\n                        }\r\n                    }\r\n                    admin {\r\n                      id\r\n                    }\r\n                }\r\n            }`,\r\n        variables: {\r\n          communityId: this.$route.params.id,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => res.data.community);\r\n  },\r\n  methods: {\r\n    async addImage() {\r\n      if(this.community.admin.id != JSON.parse(sessionStorage.getItem('user')).id) {\r\n        return;\r\n      }\r\n      const input = document.createElement('input');\r\n      const formData = new FormData();\r\n      input.type = 'file';\r\n      input.click();\r\n      input.addEventListener('change', async () => {\r\n        if (input.files.length == 0) {\r\n          return;\r\n        }\r\n        formData.append(\r\n          'operations',\r\n          JSON.stringify({\r\n            query: `\r\n            mutation UPLOAD_AVATAR_COMMUNITY($communityId: String!, $file: Upload!) {\r\n              changeAvatar(file: $file, communityId: $communityId) {\r\n                id\r\n                avatarImage\r\n              }\r\n            }`,\r\n            variables: {\r\n              communityId: this.$route.params.id,\r\n              file: null,\r\n            },\r\n          })\r\n        );\r\n        formData.append('map', '{ \"0\": [\"variables.file\"] }');\r\n        formData.append('0', input.files[0]);\r\n\r\n        const updatedCommunityAvatar = await fetch(\r\n          'http://localhost:3000/graphql',\r\n          {\r\n            method: 'POST',\r\n            body: formData,\r\n          }\r\n        )\r\n          .then((res) => res.json())\r\n          .then((res) => res.data.changeAvatar);\r\n        this.community.avatarImage = updatedCommunityAvatar.avatarImage;\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    avatarImageSrc() {\r\n      return communityAvatarImage(this.community.avatarImage);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./CommunityDetails.vue?vue&type=template&id=71722dfb\"\nimport script from \"./CommunityDetails.vue?vue&type=script&lang=js\"\nexport * from \"./CommunityDetails.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\trajk\\\\Desktop\\\\Forum\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createElementVNode","placeholder","type","render","_component_router_link","_component_post_single","_openBlock","onClick","$options","src","alt","_toDisplayString","$data","name","description","_createVNode","to","params","default","_","_createElementBlock","_Fragment","_renderList","posts","post","_createBlock","key","id","components","PostSingle","data","community","Object","created","fetch","method","headers","Accept","body","JSON","stringify","query","variables","communityId","$route","then","res","json","methods","addImage","admin","parse","sessionStorage","getItem","input","document","createElement","formData","FormData","click","addEventListener","files","length","append","file","changeAvatar","updatedCommunityAvatar","avatarImage","computed","avatarImageSrc","communityAvatarImage","this","__exports__"],"sourceRoot":""}